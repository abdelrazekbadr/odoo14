from typing import Any, Optional

_logger: Any

class Graph(dict):
    def add_node(self, name: Any, info: Any): ...
    def update_from_db(self, cr: Any) -> None: ...
    def add_module(self, cr: Any, module: Any, force: Optional[Any] = ...) -> None: ...
    def add_modules(self, cr: Any, module_list: Any, force: Optional[Any] = ...): ...
    def __iter__(self) -> Any: ...
    def __str__(self): ...

class Node:
    def __new__(cls, name: Any, graph: Any, info: Any): ...
    name: Any = ...
    graph: Any = ...
    info: Any = ...
    children: Any = ...
    depth: int = ...
    def __init__(self, name: Any, graph: Any, info: Any) -> None: ...
    @property
    def data(self): ...
    def add_child(self, name: Any, info: Any): ...
    def __setattr__(self, name: Any, value: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __str__(self): ...
    def _pprint(self, depth: int = ...): ...
    def should_have_demo(self): ...
    @property
    def parents(self): ...
