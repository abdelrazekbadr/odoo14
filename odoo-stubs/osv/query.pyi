from typing import Any, Optional

IDENT_RE: Any

def _from_table(table: Any, alias: Any): ...
def _generate_table_alias(src_table_alias: Any, link: Any): ...

class Query:
    _cr: Any = ...
    _tables: Any = ...
    _joins: Any = ...
    _where_clauses: Any = ...
    _where_params: Any = ...
    order: Any = ...
    limit: Any = ...
    offset: Any = ...
    def __init__(self, cr: Any, alias: Any, table: Optional[Any] = ...) -> None: ...
    def add_table(self, alias: Any, table: Optional[Any] = ...) -> None: ...
    def add_where(self, where_clause: Any, where_params: Any = ...) -> None: ...
    def join(self, lhs_alias: Any, lhs_column: Any, rhs_table: Any, rhs_column: Any, link: Any, extra: Optional[Any] = ..., extra_params: Any = ...): ...
    def left_join(self, lhs_alias: Any, lhs_column: Any, rhs_table: Any, rhs_column: Any, link: Any, extra: Optional[Any] = ..., extra_params: Any = ...): ...
    def _join(self, kind: Any, lhs_alias: Any, lhs_column: Any, rhs_table: Any, rhs_column: Any, link: Any, extra: Optional[Any] = ..., extra_params: Any = ...): ...
    def select(self, *args: Any): ...
    def get_sql(self): ...
    def _result(self): ...
    def __str__(self): ...
    def __bool__(self): ...
    def __len__(self): ...
    def __iter__(self) -> Any: ...
    @property
    def tables(self): ...
    @property
    def where_clause(self): ...
    @property
    def where_clause_params(self): ...
    def add_join(self, connection: Any, implicit: bool = ..., outer: bool = ..., extra: Optional[Any] = ..., extra_params: Any = ...): ...
